# -*- coding: utf-8 -*-
"""day24.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P-RKr4IUID3KQxw3c_OtwuXSfpu43Sln

**Python Try Except**

try block - The try block lets you test a block of code for errors.

except block - The except block lets you handle the error.

else block - The else block lets you execute code when there is no error.

finally block - The finally block lets you execute code, regardless of the result of the try-and except blocks.

**Exception Handling**

eg) The try block will generate an exception, because x is not defined:
"""

try:
  print(x)
except:
  print("An exception occured")

"""Without the try block, the program will crash and raise an error"""

#print(x)

"""**Many Exceptions**

eg) Print one message if the try block raises a NameError and another for other errors:
"""

try:
  print(x)
except NameError:
  print("Variable x is not defined")
except:
  print("Something else went wrong")

"""**Else**

eg) The try block does not generate any error
"""

try:
  print('Hello')
except:
  print("Something went wrong")
else:
  print("Nothing went wrong")

"""**Finally**

eg) The finally block gets executed no matter if the try block raises any errors or not

```
# This is formatted as code
```
"""

try:
  print(x)
except:
  print("Something went wrong")
finally:
  print("The 'try except' is finished")

"""**Raise an exception**

To throw (or raise) an exception, use the 'raise' keyword

eg) Raise an error and stop the program if x is lower than 0
"""

x = -1

if x < 0:
  raise Exception("Sorry, no number below Zero")

"""You can define what kind of error to raise, and the text to print to the user

eg) Raise a TypeError if x is not an integer:
"""

x = 'hello'

if not type(x) is int:
  raise TypeError("Only integers are allowed")